{"version":3,"sources":["ejDate.js"],"names":["define","require","exports","module","$","fn","ejDate","cfg","checkedDate","that","this","elems","nowDate","Date","nowYear","getFullYear","nowMonth","getMonth","defaults","yearULV","yearDLV","disabledDateReg","checkedDateFunc","init","mainElem","html","wrap","after","targetInput","selectYear","find","selectMonth","btnBefore","btnAfterDate","tbody","attr","initRenderSelect","renderDate","click","setNowDate","updateSelected","change","value","on","ev","setDate","addClass","dateStr","val","hide","show","stopPropagation","document","option","i","selected","append","tr","td","dateText","daysData","createDaysData","length","substring","indexOf","isDimmed","isDisabledDate","isCheckedDate","parNowDate","tempYear","dateObj","nowDays","getDays","lastDays","whatDay","getDay","lastDaysEnd","daysArray","startLastDaysEnd","push","year","month","days","each","text","day","flag","test","flagYear","flagMonth","flagDay","getDate","extend","parYear","parMonth","parDay","removeClass"],"mappings":"AAQAA,OAAO,SAAUC,EAASC,EAASC,GAC/B,YACA,IAAIC,GAAIH,EAAQ,SAChBG,GAAEC,GAAGC,OAAS,SAAUC,GAGpB,GAiBIC,GAjBAC,EAAOC,KAKPC,KAGAC,EAAU,GAAIC,MAGdC,EAAUF,EAAQG,cAGlBC,EAAWJ,EAAQK,WAAa,EAMhCC,GACIC,QAASP,EAAQG,cACjBK,QAAS,KAIE,oBAARb,KACPW,EAASC,QAAUZ,EAAIY,SAAWD,EAASC,QAC3CD,EAASE,QAAUb,EAAIa,SAAWF,EAASE,QAC3CF,EAASG,gBAAkBd,EAAIc,iBAAmBH,EAASG,gBAC3DH,EAASI,gBAAkBf,EAAIe,iBAAmBJ,EAASI,gBAI/D,IACIC,GAAO,WAGHZ,EAAMa,SAAWpB,EAAE,6BAA6BqB,KAC5C,+bAgBJhB,EAAKiB,KAAK,6BAEVjB,EAAKkB,MAAMhB,EAAMa,UAGjBb,EAAMiB,YAAcnB,EACpBE,EAAMkB,WAAalB,EAAMa,SAASM,KAAK,gBACvCnB,EAAMoB,YAAcpB,EAAMa,SAASM,KAAK,iBACxCnB,EAAMqB,UAAYrB,EAAMa,SAASM,KAAK,gBACtCnB,EAAMsB,aAAetB,EAAMa,SAASM,KAAK,eACzCnB,EAAMuB,MAAQvB,EAAMa,SAASM,KAAK,eAGlCnB,EAAMiB,YAAYO,KAAK,WAAW,YAGlCC,IAEAC,IAGA1B,EAAMqB,UAAUM,MAAM,WAElBC,EAAW,GAAI1B,MAAKC,EAAQE,EAAW,EAAI,IAC3CwB,MAGH7B,EAAMsB,aAAaK,MAAM,WAEtBC,EAAW,GAAI1B,MAAKC,EAAQE,EAAW,EAAI,IAC3CwB,MAIJ7B,EAAMkB,WAAWY,OAAO,WACpBF,EAAW,GAAI1B,MAAKH,KAAKgC,MAAM1B,EAAW,MAG9CL,EAAMoB,YAAYU,OAAO,WACrBF,EAAW,GAAI1B,MAAKC,EAAQJ,KAAKgC,MAAQ,MAI7C/B,EAAMuB,MAAMS,GAAG,QAAQ,cAAc,SAASC,GAE1CnC,EAAKoC,QAAQ/B,EAAQE,EAASZ,EAAEM,MAAMe,QAEtCrB,EAAEM,MAAMoC,SAAS,SAGjB,IAAIC,GAAUjC,EAAU,IAAME,EAAW,IAAMZ,EAAEM,MAAMe,MACvDd,GAAMiB,YAAYoB,IAAID,GAGkB,kBAA7B7B,GAASI,iBAChBJ,EAASI,gBAAgBd,GAI7BG,EAAMa,SAASyB,SAInBtC,EAAMiB,YAAYU,MAAM,SAASM,GAC7BjC,EAAMa,SAAS0B,OACfN,EAAGO,oBAGP/C,EAAEgD,UAAUd,MAAM,WACd3B,EAAMa,SAASyB,SAGnBtC,EAAMa,SAASc,MAAM,SAASM,GAC1BA,EAAGO,oBAIPxC,EAAMa,SAASyB,QAInBb,EAAmB,WAEf,GAAIiB,GAAOC,CAEX,KAAIA,EAAIpC,EAASC,QAASmC,GAAKpC,EAASE,QAASkC,IAE7CD,EAASjD,EAAE,WAAakD,EAAI,cAAcN,IAAIM,GAG3CA,IAAMxC,IACLuC,EAAO,GAAGE,UAAW,GAGzB5C,EAAMkB,WAAW2B,OAAOH,EAI5B,KAAIC,EAAI,EAAGA,GAAK,GAAIA,IAEhBD,EAASjD,EAAE,WAAakD,EAAI,cAAcN,IAAIM,GAG3CA,IAAMtC,IACLqC,EAAO,GAAGE,UAAW,GAGzB5C,EAAMoB,YAAYyB,OAAOH,IAKjChB,EAAa,WAGT1B,EAAMuB,MAAMT,KAAK,GAEjB,IAEIgC,GAAGC,EAAGJ,EAAIK,EADVC,EAAWC,EAAejD,EAK9B,KADA6C,EAAKrD,EAAE,aACFkD,EAAI,EAAGA,EAAIM,EAASE,OAAQR,IAAK,CAElCK,EAAWC,EAASN,GAAGS,UAAUH,EAASN,GAAGU,QAAQ,KAAO,GAC5DN,EAAKtD,EAAE,aAAaqB,KAAKkC,GACzBF,EAAGD,OAAOE,EAEV,IAAIO,GAAWL,EAASN,GAAGU,QAAQ,aAAc,CAG7CC,IAAYC,EAAeP,GAC3BD,EAAGZ,SAAS,cAEZY,EAAGZ,SAAS,cAIZqB,EAAcR,KAAcM,GAC5BP,EAAGZ,SAAS,WAIVQ,EAAI,GAAK,IAAM,IACjB3C,EAAMuB,MAAMsB,OAAOC,GAGT,KAANH,IACAG,EAAKrD,EAAE,iBASvBmC,EAAa,SAAU6B,GAElB,GAAIC,GAAWD,EAAWrD,aAG3B,SAAIsD,EAAWnD,EAASC,SAAWkD,EAAWnD,EAASE,WAIvDR,EAAUwD,EACVtD,EAAUuD,EACVrD,EAAWJ,EAAQK,WAAa,MAGhCoB,OAIJwB,EAAiB,SAAUS,GAEvB,GAmBIhB,GAjBAiB,EAAUC,EAAQ1D,EAAQE,GAG1ByD,EAAWD,EAAQ1D,EAAQE,EAAW,GAGtC0D,EAAU,GAAI7D,MAAKC,EAAQE,EAAW,EAAE,GAAG2D,SAG3CC,EAAc,GAAK,EAAIF,GAGvBG,KAGAC,EAAmBL,EAAWG,CASlC,KAAKtB,EAAI,EAAGA,EAAIsB,EAAatB,IACzBuB,EAAUvB,GAAI,WAAawB,EAAmBxB,EAAI,EAItD,KAAKA,EAAI,EAAGA,GAAKiB,EAASjB,IACtBuB,EAAUE,KAAK,UAAYzB,EAI/B,KAAKA,EAAI,EAAGuB,EAAUf,OAAS,GAAIR,IAC/BuB,EAAUE,KAAK,UAAYzB,EAG/B,OAAOuB,IAKXL,EAAU,SAAUQ,EAAKC,GAErB,GAAIC,EAeJ,OAZIA,GADU,IAAVD,EACOD,EAAO,IAAM,EAAI,GAAK,GAEZ,IAAVC,GAAyB,IAAVA,GAAyB,IAAVA,GAAyB,IAAVA,GAAyB,IAAVA,GAAyB,KAAVA,GAA0B,KAAVA,EAE3F,GAIA,IAQfzC,EAAiB,WAEb7B,EAAMkB,WAAWC,KAAK,UAAUqD,KAAK,WAC9B/E,EAAEM,MAAM0E,QAAUtE,EAAU,MAC3BV,EAAEM,MAAM,GAAG6C,UAAW,KAI9B5C,EAAMoB,YAAYD,KAAK,UAAUqD,KAAK,WAC/B/E,EAAEM,MAAM0E,QAAUpE,EAAW,MAC5BZ,EAAEM,MAAM,GAAG6C,UAAW,MAMlCW,EAAiB,SAAUmB,GACvB,GAAInE,EAASG,gBAAiB,CAC1B,GAAyDiE,GAArDvC,EAAUjC,EAAU,IAAME,EAAW,IAAMqE,EAAM,GAErD,OADAC,GAAOpE,EAASG,gBAAgBkE,KAAKxC,KAO7CoB,EAAgB,SAAUkB,GAC1B,GAAI7E,EAAa,CACb,GACIgF,GAAWhF,EAAYO,gBAAkBD,EACzC2E,EAAYjF,EAAYS,WAAa,IAAMD,EAC3C0E,EAAUlF,EAAYmF,WAAaN,EACnCC,EAAOE,GAAYC,GAAaC,CAEpC,OAAOJ,IAgCf,OA3BAlF,GAAEwF,OAAOlF,MAMLiF,QAAS,WACL,MAAOnF,IASXqC,QAAS,SAAUgD,EAAQC,EAASC,GAEhCpF,EAAMuB,MAAMJ,KAAK,WAAWkE,YAAY,UAExCxF,EAAc,GAAIK,MAAKgF,EAAQC,EAAW,EAAEC,MAKpDxE,IAEOb","file":"ejDate.min.js","sourcesContent":["/*!\r\n * ejDate 1.0.1 alpha\r\n * https://github.com/stackjie/ejDate.js\r\n * @license MIT licensed\r\n *\r\n * A project by StackJIE\r\n */\r\n\r\ndefine(function (require, exports, module) {\r\n    'use strict';\r\n    var $ = require('jquery');\r\n    $.fn.ejDate = function (cfg) {\r\n\r\n        // 保存this\r\n        var that = this;\r\n\r\n        // 私有的属性\r\n        var \r\n            // 保存jquery DOM对象的集合\r\n            elems = {},\r\n\r\n            // 当前时间对象\r\n            nowDate = new Date(),\r\n\r\n            // 当前的年\r\n            nowYear = nowDate.getFullYear(),\r\n\r\n            // 当前的月\r\n            nowMonth = nowDate.getMonth() + 1,\r\n\r\n            // 被选中的日期\r\n            checkedDate,\r\n\r\n            // 默认参数对象\r\n            defaults = {\r\n                yearULV: nowDate.getFullYear(),  // 年上限值\r\n                yearDLV: 1970,  // 年下限值                           \r\n            };\r\n\r\n        // 将配置对象初始化覆盖默认参数对象的初始值\r\n        if (typeof cfg !== 'undefined') {\r\n            defaults.yearULV = cfg.yearULV || defaults.yearULV;\r\n            defaults.yearDLV = cfg.yearDLV || defaults.yearDLV;\r\n            defaults.disabledDateReg = cfg.disabledDateReg || defaults.disabledDateReg;  // 筛选禁用日期的正则表达式\r\n            defaults.checkedDateFunc = cfg.checkedDateFunc || defaults.checkedDateFunc;  // 选日期后调用的回调方法\r\n        }\r\n       \r\n        // 私有的方法\r\n        var\r\n            init = function () {\r\n                \r\n                // 生成dom节点\r\n                elems.mainElem = $('<div class=\"ejdate-main\">').html(\r\n                    '<table><caption>\\\r\n                        <span class=\"btn-cut before-date\"></span>\\\r\n                        <select class=\"select-year\"></select>\\\r\n                        <select class=\"select-month\"></select>\\\r\n                        <span class=\"btn-cut after-date\"></span></caption>\\\r\n                        <thead><tr><th>一</th><th>二</th><th>三</th><th>四</th><th>五</th><th>六</th><th>七</th></tr></thead>\\\r\n                        <tbody></tbody></table>'\r\n                );\r\n\r\n                // 将text表单用div元素包裹，以便使组件绝对定位\r\n                that.wrap('<div class=\"ejdate-wrap\">');\r\n\r\n                that.after(elems.mainElem);\r\n\r\n                // 获取将要操作的dom元素\r\n                elems.targetInput = that;\r\n                elems.selectYear = elems.mainElem.find('.select-year'),\r\n                elems.selectMonth = elems.mainElem.find('.select-month'),\r\n                elems.btnBefore = elems.mainElem.find('.before-date'),\r\n                elems.btnAfterDate = elems.mainElem.find('.after-date'),\r\n                elems.tbody = elems.mainElem.find('table tbody');\r\n\r\n                // 将目标text表单设置为只读状态\r\n                elems.targetInput.attr('readonly','readonly');\r\n\r\n                // 渲染Select表单\r\n                initRenderSelect();\r\n\r\n                renderDate();\r\n\r\n                // 初始化表单绑定事件\r\n                elems.btnBefore.click(function(){\r\n                    // 调用setNowDate函数并传入新的Date对象（当前月份-1）\r\n                    setNowDate(new Date(nowYear,nowMonth - 1 - 1));\r\n                    updateSelected();\r\n                });\r\n\r\n                 elems.btnAfterDate.click(function(){\r\n                    // 调用setNowDate函数并传入新的Date对象（当前月份-1）\r\n                    setNowDate(new Date(nowYear,nowMonth - 1 + 1));\r\n                    updateSelected();\r\n                });\r\n\r\n                 // 绑定select的change事件\r\n                elems.selectYear.change(function () {\r\n                    setNowDate(new Date(this.value,nowMonth - 1));\r\n                });\r\n\r\n                elems.selectMonth.change(function () {\r\n                    setNowDate(new Date(nowYear,this.value - 1));\r\n                });\r\n\r\n                // 日期选中事件委托\r\n                elems.tbody.on('click','.day-normal',function(ev){\r\n\r\n                    that.setDate(nowYear,nowMonth,$(this).html());\r\n\r\n                    $(this).addClass('active');\r\n\r\n                    // 将日期写入text表单\r\n                    var dateStr = nowYear + '-' + nowMonth + '-' + $(this).html();\r\n                    elems.targetInput.val(dateStr);\r\n\r\n                    // 执行当用户选择日期后的回调处理函数\r\n                    if (typeof defaults.checkedDateFunc === 'function') {\r\n                        defaults.checkedDateFunc(checkedDate);\r\n                    }\r\n\r\n                    // 选择好日期后主体元素默认隐藏\r\n                    elems.mainElem.hide();\r\n                });\r\n\r\n                // 点击目标表单显示，点击组件主体以外隐藏\r\n                elems.targetInput.click(function(ev){\r\n                    elems.mainElem.show();\r\n                    ev.stopPropagation();\r\n                });\r\n\r\n                $(document).click(function(){\r\n                    elems.mainElem.hide();\r\n                });\r\n\r\n                elems.mainElem.click(function(ev){\r\n                    ev.stopPropagation();\r\n                });\r\n\r\n                // 主体元素默认隐藏\r\n                elems.mainElem.hide();\r\n            },\r\n\r\n            // 初始化渲染Select表单\r\n            initRenderSelect = function () {\r\n                \r\n                var option,i;\r\n                // 循环输出年份option\r\n                for(i = defaults.yearULV; i >= defaults.yearDLV; i--){\r\n\r\n                    option = $('<option>' + i + '年</option>').val(i);\r\n\r\n                    // 如果为当前年设置为选中状态\r\n                    if(i === nowYear){\r\n                        option[0].selected = true;\r\n                    }\r\n\r\n                    elems.selectYear.append(option);\r\n                }\r\n\r\n                // 循环输出月份option\r\n                for(i = 1; i <= 12; i++){\r\n\r\n                    option = $('<option>' + i + '月</option>').val(i);\r\n\r\n                    // 如果为当前月设置为选中状态\r\n                    if(i === nowMonth){\r\n                        option[0].selected = true;\r\n                    }\r\n\r\n                    elems.selectMonth.append(option);\r\n                }\r\n            },\r\n\r\n            // 渲染日期数据\r\n            renderDate = function () {\r\n                \r\n                // 重置tbody\r\n                elems.tbody.html('');\r\n\r\n                var \r\n                    daysData = createDaysData(nowDate),\r\n                    tr,td,i,j,dateText;\r\n\r\n                // 初始化第一行tr\r\n                tr = $('<tr></tr>');\r\n                for (i = 0; i < daysData.length; i++) {\r\n\r\n                    dateText = daysData[i].substring(daysData[i].indexOf('-') + 1);\r\n                    td = $('<td></td>').html(dateText);\r\n                    tr.append(td);\r\n\r\n                    var isDimmed = daysData[i].indexOf('dimmed') !== -1;\r\n\r\n                    // 添加class做不同日期的样式区分\r\n                    if (isDimmed || isDisabledDate(dateText)) {\r\n                        td.addClass('day-dimmed');\r\n                    }else {\r\n                        td.addClass('day-normal');\r\n                    }\r\n\r\n                    // 判断当前渲染的天数是不是被选中的天数\r\n                    if (isCheckedDate(dateText) && !isDimmed) {\r\n                        td.addClass('active');\r\n                    }\r\n\r\n                    // 如果当前循环到的日期能被7整除(一个星期)并且又不是最后一个日期就换行\r\n                    if ( (i + 1) % 7 === 0) {\r\n                        elems.tbody.append(tr);\r\n\r\n                        // 只要不是最后一个日期就重置tr\r\n                        if (i !== 41) {\r\n                            tr = $('<tr></tr>');\r\n                        }\r\n                    }\r\n                    \r\n                }\r\n \r\n            },\r\n\r\n            // 设置当前时间对象并渲染\r\n            setNowDate = function (parNowDate) {\r\n                 \r\n                 var tempYear = parNowDate.getFullYear();\r\n\r\n                // 如果新传入的nowDate对象年份大于指定的上限值或小于指定的下限值该函数不执行\r\n                if (tempYear > defaults.yearULV || tempYear < defaults.yearDLV) {\r\n                    return false;\r\n                }\r\n\r\n                nowDate = parNowDate;\r\n                nowYear = tempYear;\r\n                nowMonth = nowDate.getMonth() + 1;\r\n\r\n                // 调用渲染函数\r\n                renderDate();\r\n            },\r\n\r\n            // 生成月份天数数据数组\r\n            createDaysData = function (dateObj) {\r\n\r\n                var\r\n                    // 当月的天数\r\n                    nowDays = getDays(nowYear,nowMonth),\r\n                    \r\n                    // 上个月的天数\r\n                    lastDays = getDays(nowYear,nowMonth - 1),\r\n\r\n                    // 保存这个月第一天是星期几\r\n                    whatDay = new Date(nowYear,nowMonth - 1,1).getDay(),\r\n\r\n                    // 保存上月末尾的天数总和\r\n                    lastDaysEnd = 6 - (7 - whatDay),\r\n\r\n                    // 生成的天数数据数组  \r\n                    daysArray = [],\r\n\r\n                    // 保存上个月末尾天数的起始天数\r\n                    startLastDaysEnd = lastDays - lastDaysEnd,\r\n\r\n                    i;\r\n\r\n\r\n                // 产生上月末尾的天数\r\n                // 日期数据格式  ['dimmed-28',dimmed-29,...,'normal-1','normal-2',...,'dimmed-1','dimmed-2']\r\n                // 末尾会添加对应的标识以便渲染时应用不同的class样式区分\r\n                // dimmed: 表示上月以及下月不可用的日期  normal: 当月的日期\r\n                for (i = 0; i < lastDaysEnd; i++) {\r\n                    daysArray[i] ='dimmed-' + (startLastDaysEnd + i + 1);\r\n                }\r\n\r\n                // 产生本月的天数\r\n                for (i = 1; i <= nowDays; i++) {\r\n                    daysArray.push('normal-' + i);\r\n                }\r\n\r\n                // 产生余下的下月天数\r\n                for (i = 1; daysArray.length < 42; i++) {\r\n                    daysArray.push('dimmed-' + i);\r\n                }\r\n\r\n                return daysArray;\r\n                    \r\n            },\r\n\r\n            // 获取某个月共有几天\r\n            getDays = function (year,month) {\r\n                \r\n                var days;\r\n                // 当月份为二月时，根据闰年还是非闰年判断天数\r\n                if (month === 2) {\r\n                    days = year % 4 === 0 ? 29 : 28;\r\n\r\n                } else if (month === 1 || month === 3 || month === 5 || month === 7 || month === 8 || month === 10 || month === 12) {\r\n                    // 月份为：1,3,5,7,8,10,12 时，为大月.则天数为31；\r\n                    days = 31;\r\n                }\r\n                else {\r\n                    // 其他月份，天数为：30.\r\n                    days = 30;\r\n\r\n                }\r\n\r\n                return days;\r\n            },\r\n\r\n            // 更新Selec表单选中项\r\n            updateSelected = function () {\r\n\r\n                elems.selectYear.find('option').each(function(){\r\n                    if($(this).text() == nowYear + '年'){\r\n                        $(this)[0].selected = true;\r\n                    }\r\n                });\r\n\r\n                elems.selectMonth.find('option').each(function(){\r\n                    if($(this).text() == nowMonth + '月'){\r\n                        $(this)[0].selected = true;\r\n                    }\r\n                });\r\n            },\r\n\r\n            // 判断日期是否被禁用\r\n            isDisabledDate = function (day) {\r\n                if (defaults.disabledDateReg) {\r\n                    var dateStr = nowYear + 'y' + nowMonth + 'm' + day + 'd',flag;\r\n                    flag = defaults.disabledDateReg.test(dateStr);\r\n                    return flag;\r\n                }\r\n\r\n            },\r\n\r\n            // 判断是否是被选中的日期\r\n            isCheckedDate = function (day) {\r\n            if (checkedDate) {\r\n                var \r\n                    flagYear = checkedDate.getFullYear() === nowYear,\r\n                    flagMonth = checkedDate.getMonth() + 1 === nowMonth,\r\n                    flagDay = checkedDate.getDate() == day,\r\n                    flag = flagYear && flagMonth && flagDay;\r\n                \r\n                return flag;\r\n            }\r\n        };\r\n\r\n        // 对外提供的api\r\n        $.extend(this, {\r\n            \r\n            /**\r\n             * 获取选中的日期\r\n             * @return {object}\r\n             */\r\n            getDate: function () {\r\n                return checkedDate;\r\n            },\r\n\r\n            /**\r\n             * 设置选中的日期\r\n             * @param {int} parYear  年\r\n             * @param {int} parMonth 月\r\n             * @param {int} parDay   日\r\n             */\r\n            setDate: function (parYear,parMonth,parDay) {\r\n                // 清空已被选中日期的选中样式\r\n                elems.tbody.find('.active').removeClass('active');\r\n\r\n                checkedDate = new Date(parYear,parMonth - 1,parDay);\r\n            }\r\n        });\r\n\r\n        // 执行初始化函数\r\n        init();\r\n\r\n        return this;\r\n    }\r\n\r\n});"]}